--// Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

--// Player variables
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

--// Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SkinnyGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

--// Red circle button
local button = Instance.new("TextButton")
button.Name = "MenuButton"
button.Size = UDim2.new(0, 60, 0, 60)
button.Position = UDim2.new(0.9, -30, 0.8, -30)
button.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
button.Text = ""
button.BorderSizePixel = 0
button.ZIndex = 10

-- Make it a circle
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(1, 0)
uiCorner.Parent = button

-- Add glow
local uiStroke = Instance.new("UIStroke")
uiStroke.Thickness = 3
uiStroke.Color = Color3.fromRGB(255, 150, 150)
uiStroke.Parent = button

--// Panel
local panel = Instance.new("Frame")
panel.Name = "MainPanel"
panel.Size = UDim2.new(0, 200, 0, 80)
panel.Position = UDim2.new(0.9, -230, 0.8, 0)
panel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
panel.BorderSizePixel = 0
panel.Visible = false
panel.ZIndex = 5
Instance.new("UICorner", panel)

-- Panel title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0.3, 0)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Skinny Mode"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.Parent = panel

-- Toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0.8, 0, 0.5, 0)
toggleButton.Position = UDim2.new(0.1, 0, 0.4, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleButton.Text = "Activar"
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.Gotham
toggleButton.TextSize = 14
toggleButton.BorderSizePixel = 0
Instance.new("UICorner", toggleButton)
toggleButton.Parent = panel

-- Add everything to screen
panel.Parent = screenGui
button.Parent = screenGui

-- Toggle panel visibility
local function togglePanel()
    panel.Visible = not panel.Visible
end

-- Make character skinny
local function toggleSkinny()
    if toggleButton.Text == "Activar" then
        toggleButton.Text = "Desactivar"
        toggleButton.BackgroundColor3 = Color3.fromRGB(80, 180, 80)
        
        -- Make character skinny and non-collidable
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                -- Save original size if not already saved
                if not part:GetAttribute("OriginalSize") then
                    part:SetAttribute("OriginalSize", part.Size)
                end
                
                -- Make parts skinny (only reduce width and depth)
                local originalSize = part:GetAttribute("OriginalSize")
                part.Size = Vector3.new(
                    math.max(0.1, originalSize.X * 0.3),  -- 30% of original width
                    originalSize.Y,                       -- Keep original height
                    math.max(0.1, originalSize.Z * 0.3)   -- 30% of original depth
                )
                
                -- Disable collision
                part.CanCollide = false
            end
        end
    else
        toggleButton.Text = "Activar"
        toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        
        -- Restore original size and collision
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part:GetAttribute("OriginalSize") then
                local originalSize = part:GetAttribute("OriginalSize")
                part.Size = originalSize
                part.CanCollide = true
            end
        end
    end
end

-- Connect buttons
button.MouseButton1Click:Connect(togglePanel)
toggleButton.MouseButton1Click:Connect(toggleSkinny)

-- Toggle with Q key
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Q then
        toggleSkinny()
    end
end)

-- Handle character respawn
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    
    -- Reset button state
    toggleButton.Text = "Activar"
    toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
end)
