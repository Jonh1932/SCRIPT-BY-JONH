-- Aimbot Script for Roblox
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- GUI Setup
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local camera = workspace.CurrentCamera

-- Aimbot variables
local aimbotEnabled = false
local currentTarget = nil
local currentTargetIndex = 1
local connection = nil
local espConnection = nil
local highlights = {}
local enemyPlayers = {}

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
local Aimbot = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local AimbotButton = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel = Instance.new("ImageLabel")
local AbrirButton = Instance.new("ImageButton")

-- GUI Properties
ScreenGui.Parent = player:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

Aimbot.Name = "Aimbot"
Aimbot.Parent = ScreenGui
Aimbot.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Aimbot.BackgroundTransparency = 0.400
Aimbot.BorderSizePixel = 0
Aimbot.Position = UDim2.new(0.05, 0, 0.3, 0) -- Top left area, not centered
Aimbot.Size = UDim2.new(0, 192, 0, 61)
Aimbot.Visible = false -- Start hidden

UICorner.Parent = Aimbot

TextLabel.Parent = Aimbot
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0.3, 0, -0.4, 0)
TextLabel.Size = UDim2.new(0, 100, 0, 25)
TextLabel.Font = Enum.Font.FredokaOne
TextLabel.Text = "Jonh Universal"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 14

AimbotButton.Name = "AimbotButton"
AimbotButton.Parent = Aimbot
AimbotButton.BackgroundColor3 = Color3.fromRGB(186, 174, 174)
AimbotButton.BackgroundTransparency = 0.3
AimbotButton.BorderSizePixel = 0
AimbotButton.Position = UDim2.new(0.35, 0, 0.44, 0)
AimbotButton.Size = UDim2.new(0, 89, 0, 25)
AimbotButton.Font = Enum.Font.SourceSansBold
AimbotButton.Text = "AIMBOT HEAD"
AimbotButton.TextColor3 = Color3.fromRGB(0, 0, 0)
AimbotButton.TextSize = 14

UICorner_2.Parent = AimbotButton

TextLabel_2.Parent = Aimbot
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(0.22, 0, 0, 0)
TextLabel_2.Size = UDim2.new(0, 108, 0, 27)
TextLabel_2.Font = Enum.Font.FredokaOne
TextLabel_2.Text = "Aimbot Menu"
TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.TextSize = 14

-- Open/Close button
AbrirButton.Name = "AbrirButton"
AbrirButton.Parent = ScreenGui
AbrirButton.BackgroundTransparency = 1
AbrirButton.BorderSizePixel = 0
AbrirButton.Position = UDim2.new(0, 10, 0.5, -20)
AbrirButton.Size = UDim2.new(0, 40, 0, 40)
AbrirButton.Image = "rbxassetid://3570695787" -- Default Roblox icon
AbrirButton.ImageColor3 = Color3.fromRGB(255, 0, 0)

-- Aimbot Functions
local function isEnemy(otherPlayer)
    -- Check if player is on a different team
    if player.Team == nil or otherPlayer.Team == nil then
        return true -- No teams, everyone is an enemy
    end
    return player.Team ~= otherPlayer.Team
end

local function getAllEnemyPlayers()
    local enemies = {}
    local localCharacter = player.Character
    
    if not localCharacter then return enemies end
    
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and isEnemy(otherPlayer) then
            local character = otherPlayer.Character
            local humanoid = character:FindFirstChild("Humanoid")
            local head = character:FindFirstChild("Head")
            
            if humanoid and humanoid.Health > 0 and head then
                table.insert(enemies, {player = otherPlayer, character = character})
            end
        end
    end
    
    return enemies
end

local function findNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    local localCharacter = player.Character
    
    if not localCharacter then return nil end
    
    local localHead = localCharacter:FindFirstChild("Head")
    if not localHead then return nil end
    
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and isEnemy(otherPlayer) then
            local character = otherPlayer.Character
            local humanoid = character:FindFirstChild("Humanoid")
            local head = character:FindFirstChild("Head")
            
            if humanoid and humanoid.Health > 0 and head then
                local distance = (localHead.Position - head.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestPlayer = character
                end
            end
        end
    end
    
    return nearestPlayer
end

local function switchTarget()
    enemyPlayers = getAllEnemyPlayers()
    
    if #enemyPlayers == 0 then
        currentTarget = nil
        currentTargetIndex = 1
        return
    end
    
    currentTargetIndex = currentTargetIndex + 1
    if currentTargetIndex > #enemyPlayers then
        currentTargetIndex = 1
    end
    
    currentTarget = enemyPlayers[currentTargetIndex].character
end

local function updateAimbot()
    if not aimbotEnabled then return end
    
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    -- If no target selected, find nearest
    if not currentTarget or not currentTarget.Parent then
        currentTarget = findNearestPlayer()
    end
    
    if not currentTarget then return end
    
    -- Make sure it's not the local player's character
    if currentTarget == character then return end
    
    -- Check if target is still alive
    local targetHumanoid = currentTarget:FindFirstChild("Humanoid")
    if not targetHumanoid or targetHumanoid.Health <= 0 then
        currentTarget = findNearestPlayer()
        if not currentTarget then return end
    end
    
    local targetHead = currentTarget:FindFirstChild("Head")
    if not targetHead then return end
    
    -- Update the camera to look at the target's head
    camera.CFrame = CFrame.new(camera.CFrame.Position, targetHead.Position)
end

-- ESP Functions (Rainbow Highlight)
local function getRainbowColor()
    local hue = (tick() % 5) / 5 -- Rainbow cycle every 5 seconds
    return Color3.fromHSV(hue, 1, 1)
end

local function createHighlight(character)
    if character:FindFirstChild("ESPHighlight") then
        return character.ESPHighlight
    end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESPHighlight"
    highlight.Adornee = character
    highlight.FillTransparency = 0.5
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.OutlineTransparency = 0
    highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = character
    
    return highlight
end

local function updateESP()
    if not aimbotEnabled then return end
    
    local rainbowColor = getRainbowColor()
    
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and isEnemy(otherPlayer) then
            local character = otherPlayer.Character
            local humanoid = character:FindFirstChild("Humanoid")
            
            if humanoid and humanoid.Health > 0 then
                local highlight = createHighlight(character)
                highlight.OutlineColor = rainbowColor
                highlights[otherPlayer.UserId] = highlight
            end
        end
    end
end

local function removeAllHighlights()
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer.Character then
            local highlight = otherPlayer.Character:FindFirstChild("ESPHighlight")
            if highlight then
                highlight:Destroy()
            end
        end
    end
    highlights = {}
end

-- Toggle Aimbot
local function toggleAimbot()
    aimbotEnabled = not aimbotEnabled
    
    if aimbotEnabled then
        AimbotButton.Text = "AIMBOT ON"
        AimbotButton.TextColor3 = Color3.fromRGB(0, 255, 0)
        
        -- Start the aimbot loop
        connection = RunService.RenderStepped:Connect(updateAimbot)
        
        -- Start the ESP loop
        espConnection = RunService.Heartbeat:Connect(updateESP)
    else
        AimbotButton.Text = "AIMBOT HEAD"
        AimbotButton.TextColor3 = Color3.fromRGB(0, 0, 0)
        
        -- Clean up the aimbot connection
        if connection then
            connection:Disconnect()
            connection = nil
        end
        
        -- Clean up the ESP connection
        if espConnection then
            espConnection:Disconnect()
            espConnection = nil
        end
        
        -- Remove all highlights
        removeAllHighlights()
    end
end

-- Toggle Menu
local function toggleMenu()
    Aimbot.Visible = not Aimbot.Visible
end

-- Connect Events
AimbotButton.MouseButton1Click:Connect(toggleAimbot)
AbrirButton.MouseButton1Click:Connect(toggleMenu)

-- Switch target with Tab key or Right Mouse Button
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if aimbotEnabled then
        if input.KeyCode == Enum.KeyCode.Tab or input.UserInputType == Enum.UserInputType.MouseButton2 then
            switchTarget()
        end
    end
end)

-- Make the Aimbot frame draggable (improved)
local dragging = false
local dragInput, dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    Aimbot.Position = UDim2.new(
        startPos.X.Scale, 
        startPos.X.Offset + delta.X, 
        startPos.Y.Scale, 
        startPos.Y.Offset + delta.Y
    )
end

TextLabel_2.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Aimbot.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TextLabel_2.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

-- Initial setup
AimbotButton.Text = "AIMBOT HEAD"
AimbotButton.TextColor3 = Color3.fromRGB(0, 0, 0)
